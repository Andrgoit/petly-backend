{
  "openapi": "3.0.0",
  "info": {
    "title": "petly-backend docsI",
    "description": "This is a simple API",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api",
      "description": "API on localhost"
    },
    {
      "url": "https://petly-backend.onrender.com/api",
      "description": "API on server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Autorization endpoints"
    },
    {
      "name": "notices",
      "description": "Notice's endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/Register"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201-CreatedUser"
          },
          "400": {
            "$ref": "#/components/responses/400-BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/409-RegisterError"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/Login"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Login"
          },
          "400": {
            "$ref": "#/components/responses/400-BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/409-LoginError"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Remove user's token",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401-NotAutorized"
          }
        }
      }
    },
    "/auth/update": {
      "put": {
        "tags": [
          "auth"
        ],
        "summary": "Updating user data",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateUser"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Update"
          },
          "400": {
            "$ref": "#/components/responses/400-BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401-NotAutorized"
          },
          "409": {
            "$ref": "#/components/responses/409-ChangeUserError"
          }
        }
      }
    },
    "/notices/category/{categoryName}": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Робота з оголошеннями",
        "parameters": [
          {
            "in": "path",
            "name": "categoryName",
            "schema": {
              "type": "string",
              "enum": [
                "sell",
                "lostfound",
                "ingoodhands"
              ]
            },
            "required": true,
            "description": "One category with ['sell','ingoodhands','lostfound']"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-GetNotices"
          },
          "400": {
            "$ref": "#/components/responses/400-BadRequest"
          }
        }
      }
    },
    "/notices/notice/{id}": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Повертає одне оголошення",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Notice's id",
              "example": "63d9c87277ab211223ccd24d"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-NoticeById"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterBody": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "user's email"
          },
          "password": {
            "type": "string",
            "description": "user's password"
          },
          "name": {
            "type": "string",
            "description": "user's name"
          },
          "location": {
            "type": "string",
            "description": "user's location"
          },
          "phone": {
            "type": "string",
            "description": "user's phone"
          }
        }
      },
      "UserCreatedBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "user's email"
          },
          "name": {
            "type": "string",
            "description": "user's name"
          },
          "location": {
            "type": "string",
            "description": "user's location"
          },
          "phone": {
            "type": "string",
            "description": "user's phone"
          }
        }
      },
      "LoginBody": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "user's email"
          },
          "password": {
            "type": "string",
            "description": "user's password"
          }
        }
      },
      "UserLoginedBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "format": "JWT",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzY2Q5OGQ0ZWM1NzQ3ZjVjNDg0YjVlMSIsImlhdCI6MTY3NDQxODcyOCwiZXhwIjoxNjc0NDIyMzI4fQ.qmrt-kGVp-uJrhmBUt7NKLfBIhjGO7KvJC9KmX6Ujc8"
          }
        }
      },
      "UpdateUserBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "user's email",
            "example": "marta@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "user's name",
            "example": "marta"
          },
          "location": {
            "type": "string",
            "description": "user's location",
            "example": "Kovel, Lutsk"
          },
          "phone": {
            "type": "string",
            "description": "user's phone",
            "example": "380631234321"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "User's birthdate",
            "example": "09-17-2002"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "user's photo"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "user's email"
          },
          "password": {
            "type": "string",
            "description": "user's password"
          },
          "name": {
            "type": "string",
            "description": "user's name"
          },
          "location": {
            "type": "string",
            "description": "user's location"
          },
          "phone": {
            "type": "string",
            "description": "user's phone"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's photo"
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "description": "User's birthdate"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "NoticeBody": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "object",
            "properties": {
              "public_id": {
                "type": "string",
                "description": "public ID on Cloudinary",
                "example": "notices/63d9c87277ab211223ccd24d.png"
              },
              "url": {
                "type": "string",
                "description": "Url to file on Cloudinary",
                "example": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
              }
            }
          },
          "_id": {
            "type": "string",
            "format": "uuid",
            "description": "Notice's id",
            "example": "63d9c87277ab211223ccd24d"
          },
          "category": {
            "type": "string",
            "enum": [
              "sell",
              "lostfound",
              "ingoodhands"
            ]
          },
          "title": {
            "type": "string",
            "description": "The name of the message",
            "example": "Сute dog looking for a home,"
          },
          "name": {
            "type": "string",
            "description": null
          },
          "sex": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ]
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Pet's birthday",
            "example": "8-22-2021"
          },
          "breed": {
            "type": "string",
            "description": "Type breed of pet",
            "example": "Border Terrier"
          },
          "location": {
            "type": "string",
            "description": "location (city, region)",
            "example": "Lviv,Lviv"
          },
          "price": {
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "description": "Sale price of the pet"
              },
              {
                "type": "integer",
                "nullable": true,
                "description": "No price for category: \"ingoodhands\" and \"lostfound\""
              }
            ]
          },
          "comments": {
            "type": "string",
            "description": null
          }
        }
      }
    },
    "requestBodies": {
      "Register": {
        "description": "Registration user's object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegisterBody"
            },
            "examples": {
              "user": {
                "$ref": "#/components/examples/user"
              },
              "vasya": {
                "$ref": "#/components/examples/vasya"
              }
            }
          }
        }
      },
      "Login": {
        "description": "Login user's object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginBody"
            },
            "examples": {
              "user": {
                "value": {
                  "email": "user@gmail.com",
                  "password": "user1234"
                }
              },
              "vasya": {
                "value": {
                  "email": "vasya@gmail.com",
                  "password": "password1234"
                }
              }
            }
          }
        }
      },
      "UpdateUser": {
        "description": "Registration's object",
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUserBody"
            }
          }
        }
      }
    },
    "responses": {
      "201-CreatedUser": {
        "description": "User Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserCreatedBody"
            },
            "examples": {
              "user": {
                "$ref": "#/components/examples/user"
              },
              "vasya": {
                "$ref": "#/components/examples/vasya"
              }
            }
          }
        }
      },
      "200-Login": {
        "description": "A token for the user is returned",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserLoginedBody"
            }
          }
        }
      },
      "200-Update": {
        "description": "Returns updated user data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUserBody"
            },
            "examples": {
              "updateUser": {
                "$ref": "#/components/examples/UpdateUser"
              }
            }
          }
        }
      },
      "200-GetNotices": {
        "description": "Returns a list of ads for the selected category",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "object",
                    "properties": {
                      "public_id": {
                        "type": "string",
                        "description": "public ID on Cloudinary",
                        "example": "notices/63d9c87277ab211223ccd24d.png"
                      },
                      "url": {
                        "type": "string",
                        "description": "Url to file on Cloudinary",
                        "example": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
                      }
                    }
                  },
                  "_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Notice's id",
                    "example": "63d9c87277ab211223ccd24d"
                  },
                  "title": {
                    "type": "string",
                    "description": "The name of the message",
                    "example": "Сute dog looking for a home,"
                  },
                  "birthdate": {
                    "type": "string",
                    "format": "date",
                    "description": "Pet's birthday",
                    "example": "8-22-2021"
                  },
                  "breed": {
                    "type": "string",
                    "description": "Type breed of pet",
                    "example": "Border Terrier"
                  },
                  "location": {
                    "type": "string",
                    "description": "location (city, region)",
                    "example": "Lviv,Lviv"
                  },
                  "price": {
                    "oneOf": [
                      {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Sale price of the pet"
                      },
                      {
                        "type": "integer",
                        "nullable": true,
                        "description": "No price for category: \"ingoodhands\" and \"lostfound\""
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "200-NoticeById": {
        "description": "Returns notice by id",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "notice": {
                  "$ref": "#/components/schemas/NoticeBody"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "example": {
                "notice": {
                  "avatar": {
                    "public_id": "notices/63d9c87277ab211223ccd24d.png",
                    "url": "http://res.cloudinary.com/petlydata/image/upload/v1675217011/notices/63d9c87277ab211223ccd24d.png.png"
                  },
                  "_id": "63d9c87277ab211223ccd24d",
                  "category": "sell",
                  "title": "Сute dog looking for a home",
                  "name": "Rich",
                  "birthdate": "Дата",
                  "breed": "Pomeranian",
                  "sex": "male",
                  "location": null,
                  "price": 150,
                  "comments": "Lorem ipsum dolor sit amet, consectetur Lorem ipsum color sit amet",
                  "owner": "63d839a21f3fce6f49c6a2c7"
                },
                "user": {
                  "email": "morov78@ukr.net",
                  "phone": "+380984383242"
                }
              }
            }
          }
        }
      },
      "400-BadRequest": {
        "description": "Bad request. Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Any validation error"
            }
          }
        }
      },
      "401-NotAutorized": {
        "description": "User not authorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Not authorized"
            }
          }
        }
      },
      "409-RegisterError": {
        "description": "User not created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Email in use"
            }
          }
        }
      },
      "409-LoginError": {
        "description": "Error login",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Email or password is wrong"
            }
          }
        }
      },
      "409-ChangeUserError": {
        "description": "Changing the user's mail to an already existing one",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Email in use"
            }
          }
        }
      }
    },
    "examples": {
      "user": {
        "value": {
          "email": "user@gmail.com",
          "password": "user1234",
          "name": "user",
          "location": "Kyiv, Kyiv",
          "phone": "+380981234567"
        }
      },
      "vasya": {
        "value": {
          "email": "vasya@gmail.com",
          "password": "password1234",
          "name": "vasya",
          "location": "Brovary, Kyiv",
          "phone": "+380661734547"
        }
      },
      "UpdateUser": {
        "value": {
          "email": "marta@gmail.com",
          "name": "marta",
          "location": "Kovel, Lutsk",
          "phone": "+380631234321",
          "birthdate": "09-17-2002",
          "avatar": "users\\63d0e44bcef6ec0c774d22e0.jpg"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}